"use client";
// import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Suspense, useEffect, useState } from "react";
import { checkConnection } from "@/api";
import BaseLoader from "@/components/base/BaseLoader";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // The following setup is temporary, until the server code is shifted from render (deployed on a platform which doesnt spin off eg: aws ec2)
  const [serverReady, setServerReady] = useState<boolean>();
  const [hasSeenPrompt, setHasSeenPrompt] = useState<boolean>(false);
  const checkConnectionHandler = async () => {
    const response: boolean = await checkConnection();
    if (!response) {
      console.log("Couldn't connect to server", response);
    }
    setServerReady(response);
  };
  useEffect(() => {
    const intervalId = setInterval(async () => {
      if (!serverReady) {
        await checkConnectionHandler();
      }
    }, 15000); // Polling every 15 seconds

    return () => clearInterval(intervalId);
  }, [serverReady]);

  useEffect(() => {
    if (!localStorage.getItem("hasSeenPrompt")) {
      localStorage.setItem("hasSeenPrompt", "true");
    } else {
      setHasSeenPrompt(true);
    }
  }, []);

  return (
    <html lang="en">
      <title>GetJobs</title>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Suspense>
          {serverReady ? (
            children
          ) : (
            <div className="h-screen w-full flex items-center justify-center flex-col space-y-2">
              <BaseLoader size="12" color="primary" borderSize="4" />
              {!hasSeenPrompt && !serverReady && (
                <p className="text-xs text-black font-medium text-center">
                  To keep this service free, we&apos;re using a cost-efficient
                  backend.
                  <br></br>
                  Load times may be slightly longerâ€”thanks for your patience!
                </p>
              )}
            </div>
          )}
        </Suspense>
      </body>
    </html>
  );
}
